services:
  web:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "gunicorn --bind 0.0.0.0:8000 api.wsgi:application"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-*}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  celery_worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "celery -A api worker --loglevel=info"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=False
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  celery_beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "celery -A api beat --loglevel=info"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=False
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --replica-read-only no
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  static_volume:
  media_volume:
  redis_data: