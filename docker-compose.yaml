services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:80"
    depends_on:
      - web

  web:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && gunicorn --workers 3 --bind 0.0.0.0:8000 api.wsgi:application"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-*}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  celery_worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "celery -A api worker --loglevel=info"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "celery -A api beat --loglevel=info"
    volumes:
      - ./api:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping || exit 1
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  static_volume:
  media_volume:
  redis_data: